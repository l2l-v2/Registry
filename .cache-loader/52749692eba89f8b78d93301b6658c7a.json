{"remainingRequest":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/ts-loader/index.js??ref--10-3!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/admin/logfile/logfile.service.ts","dependencies":[{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/admin/logfile/logfile.service.ts","mtime":1539162063832},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular2-template-loader/index.js","mtime":1536032724656},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/cache-loader/dist/cjs.js","mtime":1536032729131},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/thread-loader/dist/cjs.js","mtime":1536032751315},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/ts-loader/index.js","mtime":1536032751573},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js","mtime":1538211611370},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js","mtime":1536032751850}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar http_1 = require(\"@angular/common/http\");\nvar JhiLogfileService = /** @class */ (function () {\n    function JhiLogfileService(http) {\n        this.http = http;\n    }\n    // get the Registry's logfile\n    JhiLogfileService.prototype.getLogfile = function () {\n        return this.http.get('management/logfile', { responseType: 'text' });\n    };\n    // get the instance's logfile\n    JhiLogfileService.prototype.getInstanceLogfile = function (instance) {\n        if (instance && instance.prefix && instance.prefix.length > 0) {\n            return this.http.get(instance.prefix + '/management/logfile', { responseType: 'text' });\n        }\n        return this.getLogfile();\n    };\n    JhiLogfileService = tslib_1.__decorate([\n        core_1.Injectable(),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" && _a || Object])\n    ], JhiLogfileService);\n    return JhiLogfileService;\n    var _a;\n}());\nexports.JhiLogfileService = JhiLogfileService;\n",{"version":3,"file":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/admin/logfile/logfile.service.ts","sourceRoot":"","sources":["/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/admin/logfile/logfile.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,6CAAkD;AAKlD;IACI,2BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,6BAA6B;IAC7B,sCAAU,GAAV;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IACzE,CAAC;IAED,6BAA6B;IAC7B,8CAAkB,GAAlB,UAAmB,QAAe;QAC9B,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC5D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,qBAAqB,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;QAC5F,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;IAC7B,CAAC;IAdQ,iBAAiB;QAD7B,iBAAU,EAAE;qEAEiB,iBAAU,oBAAV,iBAAU;OAD3B,iBAAiB,CAe7B;IAAD,wBAAC;;CAAA,AAfD,IAeC;AAfY,8CAAiB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Route } from 'app/shared';\n\n@Injectable()\nexport class JhiLogfileService {\n    constructor(private http: HttpClient) {}\n\n    // get the Registry's logfile\n    getLogfile(): Observable<any> {\n        return this.http.get('management/logfile', { responseType: 'text' });\n    }\n\n    // get the instance's logfile\n    getInstanceLogfile(instance: Route): Observable<any> {\n        if (instance && instance.prefix && instance.prefix.length > 0) {\n            return this.http.get(instance.prefix + '/management/logfile', { responseType: 'text' });\n        }\n        return this.getLogfile();\n    }\n}\n"]}]}