{"remainingRequest":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/ts-loader/index.js??ref--10-3!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/core/auth/auth-session.service.ts","dependencies":[{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/core/auth/auth-session.service.ts","mtime":1539162063836},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular2-template-loader/index.js","mtime":1536032724656},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/cache-loader/dist/cjs.js","mtime":1536032729131},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/thread-loader/dist/cjs.js","mtime":1536032751315},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/ts-loader/index.js","mtime":1536032751573},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js","mtime":1538211611370},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js","mtime":1536032751850}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar http_1 = require(\"@angular/common/http\");\nvar AuthSessionServerProvider = /** @class */ (function () {\n    function AuthSessionServerProvider(http) {\n        this.http = http;\n    }\n    AuthSessionServerProvider.prototype.login = function (credentials) {\n        var data = 'j_username=' +\n            encodeURIComponent(credentials.username) +\n            '&j_password=' +\n            encodeURIComponent(credentials.password) +\n            '&remember-me=' +\n            credentials.rememberMe +\n            '&submit=Login';\n        var headers = new http_1.HttpHeaders({\n            'Content-Type': 'application/x-www-form-urlencoded'\n        });\n        return this.http.post('api/authentication', data, { headers: headers });\n    };\n    AuthSessionServerProvider.prototype.logout = function () {\n        var _this = this;\n        // logout from the server\n        return this.http.post('api/logout', {}, { observe: 'response' }).map(function (response) {\n            // to get a new csrf token call the api\n            _this.http.get('api/account').subscribe(function () { }, function () { });\n            return response;\n        });\n    };\n    AuthSessionServerProvider = tslib_1.__decorate([\n        core_1.Injectable(),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" && _a || Object])\n    ], AuthSessionServerProvider);\n    return AuthSessionServerProvider;\n    var _a;\n}());\nexports.AuthSessionServerProvider = AuthSessionServerProvider;\n",{"version":3,"file":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/core/auth/auth-session.service.ts","sourceRoot":"","sources":["/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/core/auth/auth-session.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,6CAA6E;AAI7E;IACI,mCAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,yCAAK,GAAL,UAAM,WAAW;QACb,IAAM,IAAI,GACN,aAAa;YACb,kBAAkB,CAAC,WAAW,CAAC,QAAQ,CAAC;YACxC,cAAc;YACd,kBAAkB,CAAC,WAAW,CAAC,QAAQ,CAAC;YACxC,eAAe;YACf,WAAW,CAAC,UAAU;YACtB,eAAe,CAAC;QACpB,IAAM,OAAO,GAAG,IAAI,kBAAW,CAAC;YAC5B,cAAc,EAAE,mCAAmC;SACtD,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,EAAE,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;IACnE,CAAC;IAED,0CAAM,GAAN;QAAA,iBAOC;QANG,yBAAyB;QACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC,GAAG,CAAC,UAAC,QAA2B;YAC7F,uCAAuC;YACvC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,cAAO,CAAC,EAAE,cAAO,CAAC,CAAC,CAAC;YAC3D,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC,CAAC,CAAC;IACP,CAAC;IA1BQ,yBAAyB;QADrC,iBAAU,EAAE;qEAEiB,iBAAU,oBAAV,iBAAU;OAD3B,yBAAyB,CA2BrC;IAAD,gCAAC;;CAAA,AA3BD,IA2BC;AA3BY,8DAAyB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class AuthSessionServerProvider {\n    constructor(private http: HttpClient) {}\n\n    login(credentials): Observable<any> {\n        const data =\n            'j_username=' +\n            encodeURIComponent(credentials.username) +\n            '&j_password=' +\n            encodeURIComponent(credentials.password) +\n            '&remember-me=' +\n            credentials.rememberMe +\n            '&submit=Login';\n        const headers = new HttpHeaders({\n            'Content-Type': 'application/x-www-form-urlencoded'\n        });\n\n        return this.http.post('api/authentication', data, { headers });\n    }\n\n    logout(): Observable<any> {\n        // logout from the server\n        return this.http.post('api/logout', {}, { observe: 'response' }).map((response: HttpResponse<any>) => {\n            // to get a new csrf token call the api\n            this.http.get('api/account').subscribe(() => {}, () => {});\n            return response;\n        });\n    }\n}\n"]}]}