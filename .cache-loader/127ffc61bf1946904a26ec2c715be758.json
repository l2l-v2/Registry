{"remainingRequest":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/ts-loader/index.js??ref--10-3!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/blocks/interceptor/errorhandler.interceptor.ts","dependencies":[{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/blocks/interceptor/errorhandler.interceptor.ts","mtime":1539162063836},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular2-template-loader/index.js","mtime":1536032724656},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/cache-loader/dist/cjs.js","mtime":1536032729131},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/thread-loader/dist/cjs.js","mtime":1536032751315},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/ts-loader/index.js","mtime":1536032751573},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js","mtime":1538211611370},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js","mtime":1536032751850}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar http_1 = require(\"@angular/common/http\");\nrequire(\"rxjs/add/operator/do\");\nvar ErrorHandlerInterceptor = /** @class */ (function () {\n    function ErrorHandlerInterceptor(eventManager) {\n        this.eventManager = eventManager;\n    }\n    ErrorHandlerInterceptor.prototype.intercept = function (request, next) {\n        var _this = this;\n        return next.handle(request).do(function (event) { }, function (err) {\n            if (err instanceof http_1.HttpErrorResponse) {\n                if (!(err.status === 401 && (err.message === '' || (err.url && err.url.indexOf('/api/account') === 0)))) {\n                    if (_this.eventManager !== undefined) {\n                        _this.eventManager.broadcast({ name: 'jHipsterRegistryApp.httpError', content: err });\n                    }\n                }\n            }\n        });\n    };\n    return ErrorHandlerInterceptor;\n}());\nexports.ErrorHandlerInterceptor = ErrorHandlerInterceptor;\n",{"version":3,"file":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/blocks/interceptor/errorhandler.interceptor.ts","sourceRoot":"","sources":["/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/blocks/interceptor/errorhandler.interceptor.ts"],"names":[],"mappings":";;AACA,6CAA+G;AAE/G,gCAA8B;AAE9B;IACI,iCAAoB,YAA6B;QAA7B,iBAAY,GAAZ,YAAY,CAAiB;IAAG,CAAC;IAErD,2CAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QAAtD,iBAaC;QAZG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAC1B,UAAC,KAAqB,IAAM,CAAC,EAC7B,UAAC,GAAQ;YACL,EAAE,CAAC,CAAC,GAAG,YAAY,wBAAiB,CAAC,CAAC,CAAC;gBACnC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtG,EAAE,CAAC,CAAC,KAAI,CAAC,YAAY,KAAK,SAAS,CAAC,CAAC,CAAC;wBAClC,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,+BAA+B,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;oBACzF,CAAC;gBACL,CAAC;YACL,CAAC;QACL,CAAC,CACJ,CAAC;IACN,CAAC;IACL,8BAAC;AAAD,CAAC,AAjBD,IAiBC;AAjBY,0DAAuB","sourcesContent":["import { JhiEventManager } from 'ng-jhipster';\nimport { HttpInterceptor, HttpRequest, HttpErrorResponse, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\n\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n    constructor(private eventManager: JhiEventManager) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).do(\n            (event: HttpEvent<any>) => {},\n            (err: any) => {\n                if (err instanceof HttpErrorResponse) {\n                    if (!(err.status === 401 && (err.message === '' || (err.url && err.url.indexOf('/api/account') === 0)))) {\n                        if (this.eventManager !== undefined) {\n                            this.eventManager.broadcast({ name: 'jHipsterRegistryApp.httpError', content: err });\n                        }\n                    }\n                }\n            }\n        );\n    }\n}\n"]}]}