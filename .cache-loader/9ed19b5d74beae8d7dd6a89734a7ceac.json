{"remainingRequest":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/ts-loader/index.js??ref--10-3!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/core/auth/user-route-access-service.ts","dependencies":[{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/core/auth/user-route-access-service.ts","mtime":1539162063836},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular2-template-loader/index.js","mtime":1536032724656},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/cache-loader/dist/cjs.js","mtime":1536032729131},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/thread-loader/dist/cjs.js","mtime":1536032751315},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/ts-loader/index.js","mtime":1536032751573},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js","mtime":1538211611370},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js","mtime":1536032751850}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar shared_1 = require(\"app/shared\");\nvar login_modal_service_1 = require(\"app/core/login/login-modal.service\");\nvar state_storage_service_1 = require(\"./state-storage.service\");\nvar UserRouteAccessService = /** @class */ (function () {\n    function UserRouteAccessService(router, loginModalService, principal, stateStorageService) {\n        this.router = router;\n        this.loginModalService = loginModalService;\n        this.principal = principal;\n        this.stateStorageService = stateStorageService;\n    }\n    UserRouteAccessService.prototype.canActivate = function (route, state) {\n        var authorities = route.data['authorities'];\n        if (!authorities || authorities.length === 0) {\n            return true;\n        }\n        return this.checkLogin(authorities, state.url);\n    };\n    UserRouteAccessService.prototype.checkLogin = function (authorities, url) {\n        var _this = this;\n        var principal = this.principal;\n        return Promise.resolve(principal.identity().then(function (account) {\n            if (account && principal.hasAnyAuthorityDirect(authorities)) {\n                return true;\n            }\n            _this.stateStorageService.storeUrl(url);\n            _this.router.navigate(['accessdenied']).then(function () {\n                // only show the login dialog, if the user hasn't logged in yet\n                if (!account) {\n                    _this.loginModalService.open();\n                }\n            });\n            return false;\n        }));\n    };\n    UserRouteAccessService = tslib_1.__decorate([\n        core_1.Injectable(),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" && _a || Object, typeof (_b = typeof login_modal_service_1.LoginModalService !== \"undefined\" && login_modal_service_1.LoginModalService) === \"function\" && _b || Object, typeof (_c = typeof shared_1.Principal !== \"undefined\" && shared_1.Principal) === \"function\" && _c || Object, typeof (_d = typeof state_storage_service_1.StateStorageService !== \"undefined\" && state_storage_service_1.StateStorageService) === \"function\" && _d || Object])\n    ], UserRouteAccessService);\n    return UserRouteAccessService;\n    var _a, _b, _c, _d;\n}());\nexports.UserRouteAccessService = UserRouteAccessService;\n",{"version":3,"file":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/core/auth/user-route-access-service.ts","sourceRoot":"","sources":["/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/core/auth/user-route-access-service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,0CAAmG;AAEnG,qCAAuC;AACvC,0EAAuE;AACvE,iEAA8D;AAG9D;IACI,gCACY,MAAc,EACd,iBAAoC,EACpC,SAAoB,EACpB,mBAAwC;QAHxC,WAAM,GAAN,MAAM,CAAQ;QACd,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,cAAS,GAAT,SAAS,CAAW;QACpB,wBAAmB,GAAnB,mBAAmB,CAAqB;IACjD,CAAC;IAEJ,4CAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACjE,IAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC9C,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;IACnD,CAAC;IAED,2CAAU,GAAV,UAAW,WAAqB,EAAE,GAAW;QAA7C,iBAkBC;QAjBG,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACjC,MAAM,CAAC,OAAO,CAAC,OAAO,CAClB,SAAS,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAC,OAAO;YAC9B,EAAE,CAAC,CAAC,OAAO,IAAI,SAAS,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC1D,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;YAED,KAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACvC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC;gBACxC,+DAA+D;gBAC/D,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBACX,KAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;gBAClC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC,CAAC,CACL,CAAC;IACN,CAAC;IAnCQ,sBAAsB;QADlC,iBAAU,EAAE;qEAGW,eAAM,oBAAN,eAAM,sDACK,uCAAiB,oBAAjB,uCAAiB,sDACzB,kBAAS,oBAAT,kBAAS,sDACC,2CAAmB,oBAAnB,2CAAmB;OAL3C,sBAAsB,CAoClC;IAAD,6BAAC;;CAAA,AApCD,IAoCC;AApCY,wDAAsB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { Principal } from 'app/shared';\nimport { LoginModalService } from 'app/core/login/login-modal.service';\nimport { StateStorageService } from './state-storage.service';\n\n@Injectable()\nexport class UserRouteAccessService implements CanActivate {\n    constructor(\n        private router: Router,\n        private loginModalService: LoginModalService,\n        private principal: Principal,\n        private stateStorageService: StateStorageService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Promise<boolean> {\n        const authorities = route.data['authorities'];\n        if (!authorities || authorities.length === 0) {\n            return true;\n        }\n\n        return this.checkLogin(authorities, state.url);\n    }\n\n    checkLogin(authorities: string[], url: string): Promise<boolean> {\n        const principal = this.principal;\n        return Promise.resolve(\n            principal.identity().then((account) => {\n                if (account && principal.hasAnyAuthorityDirect(authorities)) {\n                    return true;\n                }\n\n                this.stateStorageService.storeUrl(url);\n                this.router.navigate(['accessdenied']).then(() => {\n                    // only show the login dialog, if the user hasn't logged in yet\n                    if (!account) {\n                        this.loginModalService.open();\n                    }\n                });\n                return false;\n            })\n        );\n    }\n}\n"]}]}