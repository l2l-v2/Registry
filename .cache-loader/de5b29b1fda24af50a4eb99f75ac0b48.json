{"remainingRequest":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/ts-loader/index.js??ref--10-3!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/admin/logs/logs.component.ts","dependencies":[{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/admin/logs/logs.component.ts","mtime":1539162063832},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular2-template-loader/index.js","mtime":1536032724656},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/cache-loader/dist/cjs.js","mtime":1536032729131},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/thread-loader/dist/cjs.js","mtime":1536032751315},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/ts-loader/index.js","mtime":1536032751573},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js","mtime":1538211611370},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js","mtime":1536032751850}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar log_model_1 = require(\"./log.model\");\nvar logs_service_1 = require(\"./logs.service\");\nvar shared_1 = require(\"app/shared\");\nvar LogsComponent = /** @class */ (function () {\n    function LogsComponent(logsService, routesService) {\n        this.logsService = logsService;\n        this.routesService = routesService;\n        this.filter = '';\n        this.orderProp = 'name';\n        this.reverse = false;\n    }\n    LogsComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.loggers = [];\n        this.subscription = this.routesService.routeChanged$.subscribe(function (route) {\n            _this.activeRoute = route;\n            _this.displayActiveRouteLogs();\n        });\n    };\n    LogsComponent.prototype.changeLevel = function (name, level) {\n        var _this = this;\n        var log = new log_model_1.Log(name, level);\n        if (this.activeRoute && this.activeRoute.status !== 'DOWN') {\n            this.logsService.changeInstanceLevel(this.activeRoute, log).subscribe(function () {\n                _this.logsService.findInstanceAll(_this.activeRoute).subscribe(function (response) { return (_this.loggers = response.body); });\n            });\n        }\n    };\n    LogsComponent.prototype.displayActiveRouteLogs = function () {\n        var _this = this;\n        this.updatingLogs = true;\n        if (this.activeRoute && this.activeRoute.status !== 'DOWN') {\n            this.logsService.findInstanceAll(this.activeRoute).subscribe(function (response) {\n                _this.loggers = response.body;\n                _this.updatingLogs = false;\n            }, function (error) {\n                if (error.status === 503 || error.status === 500 || error.status === 404) {\n                    _this.updatingLogs = false;\n                    if (error.status === 500 || error.status === 404) {\n                        _this.routesService.routeDown(_this.activeRoute);\n                    }\n                }\n            });\n        }\n        else {\n            this.routesService.routeDown(this.activeRoute);\n        }\n    };\n    LogsComponent.prototype.ngOnDestroy = function () {\n        // prevent memory leak when component destroyed\n        this.subscription.unsubscribe();\n    };\n    LogsComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-logs',\n            templateUrl: './logs.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof logs_service_1.LogsService !== \"undefined\" && logs_service_1.LogsService) === \"function\" && _a || Object, typeof (_b = typeof shared_1.JhiRoutesService !== \"undefined\" && shared_1.JhiRoutesService) === \"function\" && _b || Object])\n    ], LogsComponent);\n    return LogsComponent;\n    var _a, _b;\n}());\nexports.LogsComponent = LogsComponent;\n",{"version":3,"file":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/admin/logs/logs.component.ts","sourceRoot":"","sources":["/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/admin/logs/logs.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { Log } from './log.model';\nimport { LogsService } from './logs.service';\n\nimport { JhiRoutesService, Route } from 'app/shared';\n\n@Component({\n    selector: 'jhi-logs',\n    templateUrl: './logs.component.html'\n})\nexport class LogsComponent implements OnInit, OnDestroy {\n    loggers: Log[];\n    updatingLogs: boolean;\n    filter: string;\n    orderProp: string;\n    reverse: boolean;\n\n    activeRoute: Route;\n    subscription: Subscription;\n\n    constructor(private logsService: LogsService, private routesService: JhiRoutesService) {\n        this.filter = '';\n        this.orderProp = 'name';\n        this.reverse = false;\n    }\n\n    ngOnInit() {\n        this.loggers = [];\n        this.subscription = this.routesService.routeChanged$.subscribe((route) => {\n            this.activeRoute = route;\n            this.displayActiveRouteLogs();\n        });\n    }\n\n    changeLevel(name: string, level: string) {\n        const log = new Log(name, level);\n        if (this.activeRoute && this.activeRoute.status !== 'DOWN') {\n            this.logsService.changeInstanceLevel(this.activeRoute, log).subscribe(() => {\n                this.logsService.findInstanceAll(this.activeRoute).subscribe((response) => (this.loggers = response.body));\n            });\n        }\n    }\n\n    displayActiveRouteLogs() {\n        this.updatingLogs = true;\n        if (this.activeRoute && this.activeRoute.status !== 'DOWN') {\n            this.logsService.findInstanceAll(this.activeRoute).subscribe(\n                (response) => {\n                    this.loggers = response.body;\n                    this.updatingLogs = false;\n                },\n                (error) => {\n                    if (error.status === 503 || error.status === 500 || error.status === 404) {\n                        this.updatingLogs = false;\n                        if (error.status === 500 || error.status === 404) {\n                            this.routesService.routeDown(this.activeRoute);\n                        }\n                    }\n                }\n            );\n        } else {\n            this.routesService.routeDown(this.activeRoute);\n        }\n    }\n\n    ngOnDestroy() {\n        // prevent memory leak when component destroyed\n        this.subscription.unsubscribe();\n    }\n}\n"]}]}