{"remainingRequest":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/ts-loader/index.js??ref--10-3!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/admin/logs/logs.service.ts","dependencies":[{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/admin/logs/logs.service.ts","mtime":1539162063832},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular2-template-loader/index.js","mtime":1536032724656},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/cache-loader/dist/cjs.js","mtime":1536032729131},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/thread-loader/dist/cjs.js","mtime":1536032751315},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/ts-loader/index.js","mtime":1536032751573},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js","mtime":1538211611370},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js","mtime":1536032751850}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar http_1 = require(\"@angular/common/http\");\nvar app_constants_1 = require(\"app/app.constants\");\nvar LogsService = /** @class */ (function () {\n    function LogsService(http) {\n        this.http = http;\n    }\n    LogsService.prototype.changeLevel = function (log) {\n        return this.http.put(app_constants_1.SERVER_API_URL + 'management/logs', log, { observe: 'response' });\n    };\n    LogsService.prototype.changeInstanceLevel = function (instance, log) {\n        if (instance && instance.prefix && instance.prefix.length > 0) {\n            return this.http.put(instance.prefix + '/management/logs', log, { observe: 'response' });\n        }\n        return this.changeLevel(log);\n    };\n    LogsService.prototype.findAll = function () {\n        return this.http.get(app_constants_1.SERVER_API_URL + 'management/logs', { observe: 'response' });\n    };\n    LogsService.prototype.findInstanceAll = function (instance) {\n        if (instance && instance.prefix && instance.prefix.length > 0) {\n            return this.http.get(instance.prefix + '/management/logs', { observe: 'response' });\n        }\n        return this.findAll();\n    };\n    LogsService = tslib_1.__decorate([\n        core_1.Injectable(),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" && _a || Object])\n    ], LogsService);\n    return LogsService;\n    var _a;\n}());\nexports.LogsService = LogsService;\n",{"version":3,"file":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/admin/logs/logs.service.ts","sourceRoot":"","sources":["/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/admin/logs/logs.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,6CAAgE;AAGhE,mDAAmD;AAKnD;IACI,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,iCAAW,GAAX,UAAY,GAAQ;QAChB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,8BAAc,GAAG,iBAAiB,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC3F,CAAC;IAED,yCAAmB,GAAnB,UAAoB,QAAe,EAAE,GAAQ;QACzC,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC5D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,kBAAkB,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;QAC7F,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,6BAAO,GAAP;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,8BAAc,GAAG,iBAAiB,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC7F,CAAC;IAED,qCAAe,GAAf,UAAgB,QAAe;QAC3B,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC5D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,QAAQ,CAAC,MAAM,GAAG,kBAAkB,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;QAC/F,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IAvBQ,WAAW;QADvB,iBAAU,EAAE;qEAEiB,iBAAU,oBAAV,iBAAU;OAD3B,WAAW,CAwBvB;IAAD,kBAAC;;CAAA,AAxBD,IAwBC;AAxBY,kCAAW","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { Log } from './log.model';\nimport { Route } from 'app/shared';\n\n@Injectable()\nexport class LogsService {\n    constructor(private http: HttpClient) {}\n\n    changeLevel(log: Log): Observable<HttpResponse<any>> {\n        return this.http.put(SERVER_API_URL + 'management/logs', log, { observe: 'response' });\n    }\n\n    changeInstanceLevel(instance: Route, log: Log): Observable<HttpResponse<any>> {\n        if (instance && instance.prefix && instance.prefix.length > 0) {\n            return this.http.put(instance.prefix + '/management/logs', log, { observe: 'response' });\n        }\n        return this.changeLevel(log);\n    }\n\n    findAll(): Observable<HttpResponse<Log[]>> {\n        return this.http.get<Log[]>(SERVER_API_URL + 'management/logs', { observe: 'response' });\n    }\n\n    findInstanceAll(instance: Route): Observable<HttpResponse<Log[]>> {\n        if (instance && instance.prefix && instance.prefix.length > 0) {\n            return this.http.get<Log[]>(instance.prefix + '/management/logs', { observe: 'response' });\n        }\n        return this.findAll();\n    }\n}\n"]}]}