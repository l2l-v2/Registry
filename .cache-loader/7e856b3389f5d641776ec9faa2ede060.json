{"remainingRequest":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/ts-loader/index.js??ref--10-3!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/admin/logfile/logfile.component.ts","dependencies":[{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/admin/logfile/logfile.component.ts","mtime":1539162063832},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular2-template-loader/index.js","mtime":1536032724656},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/cache-loader/dist/cjs.js","mtime":1536032729131},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/thread-loader/dist/cjs.js","mtime":1536032751315},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/ts-loader/index.js","mtime":1536032751573},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js","mtime":1538211611370},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js","mtime":1536032751850}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar logfile_service_1 = require(\"./logfile.service\");\nvar shared_1 = require(\"app/shared\");\nvar JhiLogfileComponent = /** @class */ (function () {\n    function JhiLogfileComponent(jhiLogfileService, routesService) {\n        this.jhiLogfileService = jhiLogfileService;\n        this.routesService = routesService;\n    }\n    JhiLogfileComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.subscription = this.routesService.routeChanged$.subscribe(function (route) {\n            _this.activeRoute = route;\n            _this.displayActiveRouteLog();\n        });\n    };\n    JhiLogfileComponent.prototype.displayActiveRouteLog = function () {\n        var _this = this;\n        this.updatingLogfile = true;\n        if (this.activeRoute && this.activeRoute.status !== 'DOWN') {\n            this.jhiLogfileService.getInstanceLogfile(this.activeRoute).subscribe(function (logtxt) {\n                _this.logtxt = logtxt;\n                _this.updatingLogfile = false;\n            }, function (error) {\n                if (error.status === 503 || error.status === 500 || error.status === 404) {\n                    _this.logtxt =\n                        'No available logfile. \\n' +\n                            'Please check:\\n ' +\n                            '- if the microservice is up\\n ' +\n                            '- these properties are set: \\n ' +\n                            '    - logging.path\\n ' +\n                            '    - logging.file (to avoid using the same spring.log)\\n\\n' +\n                            'See:\\n ' +\n                            '- https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html\\n ' +\n                            '- https://docs.spring.io/spring-boot/docs/current/reference/html/howto-logging.html';\n                    _this.updatingLogfile = false;\n                }\n            });\n        }\n    };\n    JhiLogfileComponent.prototype.scrollToBottom = function () {\n        this.logFileViewer.nativeElement.scrollTop = this.logFileViewer.nativeElement.scrollHeight;\n    };\n    JhiLogfileComponent.prototype.scrollToTop = function () {\n        this.logFileViewer.nativeElement.scrollTop = this.logFileViewer.nativeElement.scrolledUp;\n    };\n    JhiLogfileComponent.prototype.ngOnDestroy = function () {\n        // prevent memory leak when component destroyed\n        this.subscription.unsubscribe();\n    };\n    tslib_1.__decorate([\n        core_1.ViewChild('logfile'),\n        tslib_1.__metadata(\"design:type\", typeof (_a = typeof core_1.ElementRef !== \"undefined\" && core_1.ElementRef) === \"function\" && _a || Object)\n    ], JhiLogfileComponent.prototype, \"logFileViewer\", void 0);\n    JhiLogfileComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-logfile',\n            templateUrl: './logfile.component.html',\n            styleUrls: ['logfile.scss']\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_b = typeof logfile_service_1.JhiLogfileService !== \"undefined\" && logfile_service_1.JhiLogfileService) === \"function\" && _b || Object, typeof (_c = typeof shared_1.JhiRoutesService !== \"undefined\" && shared_1.JhiRoutesService) === \"function\" && _c || Object])\n    ], JhiLogfileComponent);\n    return JhiLogfileComponent;\n    var _a, _b, _c;\n}());\nexports.JhiLogfileComponent = JhiLogfileComponent;\n",{"version":3,"file":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/admin/logfile/logfile.component.ts","sourceRoot":"","sources":["/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/admin/logfile/logfile.component.ts"],"names":[],"mappings":";;;AAAA,sCAAoF;AAEpF,qDAAsD;AAEtD,qCAAqD;AAOrD;IAQI,6BAAoB,iBAAoC,EAAU,aAA+B;QAA7E,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,kBAAa,GAAb,aAAa,CAAkB;IAAG,CAAC;IAErG,sCAAQ,GAAR;QAAA,iBAKC;QAJG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,KAAK;YACjE,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,KAAI,CAAC,qBAAqB,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mDAAqB,GAArB;QAAA,iBAyBC;QAxBG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC,CAAC;YACzD,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CACjE,UAAC,MAAM;gBACH,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YACjC,CAAC,EACD,UAAC,KAAK;gBACF,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;oBACvE,KAAI,CAAC,MAAM;wBACP,0BAA0B;4BAC1B,kBAAkB;4BAClB,gCAAgC;4BAChC,iCAAiC;4BACjC,uBAAuB;4BACvB,6DAA6D;4BAC7D,SAAS;4BACT,qGAAqG;4BACrG,qFAAqF,CAAC;oBAC1F,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBACjC,CAAC;YACL,CAAC,CACJ,CAAC;QACN,CAAC;IACL,CAAC;IAED,4CAAc,GAAd;QACI,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,YAAY,CAAC;IAC/F,CAAC;IAED,yCAAW,GAAX;QACI,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,UAAU,CAAC;IAC7F,CAAC;IAED,yCAAW,GAAX;QACI,+CAA+C;QAC/C,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IACpC,CAAC;IAjDqB;QAArB,gBAAS,CAAC,SAAS,CAAC;8DAAwB,iBAAU,oBAAV,iBAAU;8DAAC;IAN/C,mBAAmB;QAL/B,gBAAS,CAAC;YACP,QAAQ,EAAE,aAAa;YACvB,WAAW,EAAE,0BAA0B;YACvC,SAAS,EAAE,CAAC,cAAc,CAAC;SAC9B,CAAC;qEASyC,mCAAiB,oBAAjB,mCAAiB,sDAAyB,yBAAgB,oBAAhB,yBAAgB;OARxF,mBAAmB,CAwD/B;IAAD,0BAAC;;CAAA,AAxDD,IAwDC;AAxDY,kDAAmB","sourcesContent":["import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { JhiLogfileService } from './logfile.service';\n\nimport { JhiRoutesService, Route } from 'app/shared';\n\n@Component({\n    selector: 'jhi-logfile',\n    templateUrl: './logfile.component.html',\n    styleUrls: ['logfile.scss']\n})\nexport class JhiLogfileComponent implements OnInit, OnDestroy {\n    activeRoute: Route;\n    updatingLogfile: boolean;\n    logtxt: string;\n    subscription: Subscription;\n\n    @ViewChild('logfile') private logFileViewer: ElementRef;\n\n    constructor(private jhiLogfileService: JhiLogfileService, private routesService: JhiRoutesService) {}\n\n    ngOnInit() {\n        this.subscription = this.routesService.routeChanged$.subscribe((route) => {\n            this.activeRoute = route;\n            this.displayActiveRouteLog();\n        });\n    }\n\n    displayActiveRouteLog() {\n        this.updatingLogfile = true;\n        if (this.activeRoute && this.activeRoute.status !== 'DOWN') {\n            this.jhiLogfileService.getInstanceLogfile(this.activeRoute).subscribe(\n                (logtxt) => {\n                    this.logtxt = logtxt;\n                    this.updatingLogfile = false;\n                },\n                (error) => {\n                    if (error.status === 503 || error.status === 500 || error.status === 404) {\n                        this.logtxt =\n                            'No available logfile. \\n' +\n                            'Please check:\\n ' +\n                            '- if the microservice is up\\n ' +\n                            '- these properties are set: \\n ' +\n                            '    - logging.path\\n ' +\n                            '    - logging.file (to avoid using the same spring.log)\\n\\n' +\n                            'See:\\n ' +\n                            '- https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html\\n ' +\n                            '- https://docs.spring.io/spring-boot/docs/current/reference/html/howto-logging.html';\n                        this.updatingLogfile = false;\n                    }\n                }\n            );\n        }\n    }\n\n    scrollToBottom() {\n        this.logFileViewer.nativeElement.scrollTop = this.logFileViewer.nativeElement.scrollHeight;\n    }\n\n    scrollToTop() {\n        this.logFileViewer.nativeElement.scrollTop = this.logFileViewer.nativeElement.scrolledUp;\n    }\n\n    ngOnDestroy() {\n        // prevent memory leak when component destroyed\n        this.subscription.unsubscribe();\n    }\n}\n"]}]}