{"remainingRequest":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/ts-loader/index.js??ref--10-3!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/shared/oauth2/login-oauth2.service.ts","dependencies":[{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/shared/oauth2/login-oauth2.service.ts","mtime":1539162063844},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular2-template-loader/index.js","mtime":1536032724656},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/cache-loader/dist/cjs.js","mtime":1536032729131},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/thread-loader/dist/cjs.js","mtime":1536032751315},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/ts-loader/index.js","mtime":1536032751573},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js","mtime":1538211611370},{"path":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js","mtime":1536032751850}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar principal_service_1 = require(\"app/core/auth/principal.service\");\nvar auth_session_service_1 = require(\"app/core/auth/auth-session.service\");\nvar LoginOAuth2Service = /** @class */ (function () {\n    function LoginOAuth2Service(principal, authServerProvider) {\n        this.principal = principal;\n        this.authServerProvider = authServerProvider;\n    }\n    LoginOAuth2Service.prototype.login = function () {\n        var port = location.port ? ':' + location.port : '';\n        if (port === ':9000') {\n            port = ':8761';\n        }\n        location.href = '//' + location.hostname + port + '/login';\n    };\n    LoginOAuth2Service.prototype.logout = function () {\n        this.authServerProvider.logout().subscribe();\n        this.principal.authenticate(null);\n    };\n    LoginOAuth2Service = tslib_1.__decorate([\n        core_1.Injectable(),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof principal_service_1.Principal !== \"undefined\" && principal_service_1.Principal) === \"function\" && _a || Object, typeof (_b = typeof auth_session_service_1.AuthSessionServerProvider !== \"undefined\" && auth_session_service_1.AuthSessionServerProvider) === \"function\" && _b || Object])\n    ], LoginOAuth2Service);\n    return LoginOAuth2Service;\n    var _a, _b;\n}());\nexports.LoginOAuth2Service = LoginOAuth2Service;\n",{"version":3,"file":"/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/shared/oauth2/login-oauth2.service.ts","sourceRoot":"","sources":["/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/angular-router-loader/src/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/node_modules/tslint-loader/index.js!/home/bqzhu/Desktop/l2l-v2/l2l-registry/src/main/webapp/app/shared/oauth2/login-oauth2.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,qEAA4D;AAC5D,2EAA+E;AAG/E;IACI,4BAAoB,SAAoB,EAAU,kBAA6C;QAA3E,cAAS,GAAT,SAAS,CAAW;QAAU,uBAAkB,GAAlB,kBAAkB,CAA2B;IAAG,CAAC;IAEnG,kCAAK,GAAL;QACI,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QACpD,EAAE,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;YACnB,IAAI,GAAG,OAAO,CAAC;QACnB,CAAC;QACD,QAAQ,CAAC,IAAI,GAAG,IAAI,GAAG,QAAQ,CAAC,QAAQ,GAAG,IAAI,GAAG,QAAQ,CAAC;IAC/D,CAAC;IAED,mCAAM,GAAN;QACI,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,CAAC;QAC7C,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAdQ,kBAAkB;QAD9B,iBAAU,EAAE;qEAEsB,6BAAS,oBAAT,6BAAS,sDAA8B,gDAAyB,oBAAzB,gDAAyB;OADtF,kBAAkB,CAe9B;IAAD,yBAAC;;CAAA,AAfD,IAeC;AAfY,gDAAkB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Principal } from 'app/core/auth/principal.service';\nimport { AuthSessionServerProvider } from 'app/core/auth/auth-session.service';\n\n@Injectable()\nexport class LoginOAuth2Service {\n    constructor(private principal: Principal, private authServerProvider: AuthSessionServerProvider) {}\n\n    login() {\n        let port = location.port ? ':' + location.port : '';\n        if (port === ':9000') {\n            port = ':8761';\n        }\n        location.href = '//' + location.hostname + port + '/login';\n    }\n\n    logout() {\n        this.authServerProvider.logout().subscribe();\n        this.principal.authenticate(null);\n    }\n}\n"]}]}